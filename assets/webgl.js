const vsSource=`
    attribute vec4 aVertexPosition;

    uniform mat4 uModelViewMatrix;
    uniform mat4 uProjectionMatrix;

    void main(void) {
      gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;
    }
`,fsSource=`
    void main(void) {
      gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);
    }
`;let cubeRotation=0,deltaTime=0;function initPositionBuffer(e,_){let t=[],r=[];if(4===_)t=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1,],r=[0,1,2,1,2,3,2,3,0,3,0,1,];else if(6===_)t=[-1,-1,-1,1,-1,-1,1,1,-1,-1,1,-1,-1,-1,1,1,-1,1,1,1,1,-1,1,1,],r=[0,1,2,0,2,3,4,5,6,4,6,7,0,1,5,0,5,4,2,3,7,2,7,6,0,3,7,0,7,4,1,2,6,1,6,5];else if(8===_)t=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1,],r=[0,2,4,0,3,4,1,2,4,1,3,4,0,2,5,0,3,5,1,2,5,1,3,5,];else if(12===_){let i=(1+Math.sqrt(5))/2;t=[1,1,1,1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,0,1/i,i,0,1/i,-i,0,-1/i,i,0,-1/i,-i,1/i,i,0,1/i,-i,0,-1/i,i,0,-1/i,-i,0,i,0,1/i,i,0,-1/i,-i,0,1/i,-i,0,-1/i,],r=[0,8,4,0,16,8,0,12,16,1,17,9,1,13,17,1,12,13,2,10,6,2,16,10,2,13,16,3,11,7,3,17,11,3,13,17,4,14,5,4,18,14,4,8,18,5,15,7,5,19,15,5,14,19,6,18,8,6,10,18,6,19,10,7,15,11,7,19,15,7,19,15,]}else{if(20!==_)return alert("n value not supported. Please use n=4, 6, 8, 12, or 20."),null;let o=(1+Math.sqrt(5))/2;t=[-1,o,0,1,o,0,-1,-o,0,1,-o,0,0,-1,o,0,1,o,0,-1,-o,0,1,-o,o,0,-1,o,0,1,-o,0,-1,-o,0,1,],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1,]}let a=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,a),e.bufferData(e.ARRAY_BUFFER,new Float32Array(t),e.STATIC_DRAW);let n=e.createBuffer();return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(r),e.STATIC_DRAW),{position:a,indices:n,vertexCount:r.length}}function initShaderProgram(e,_,t){let r=loadShader(e,e.VERTEX_SHADER,_),i=loadShader(e,e.FRAGMENT_SHADER,t),o=e.createProgram();return(e.attachShader(o,r),e.attachShader(o,i),e.linkProgram(o),e.getProgramParameter(o,e.LINK_STATUS))?o:(alert("Unable to initialize the shader program: "+e.getProgramInfoLog(o)),null)}function loadShader(e,_,t){let r=e.createShader(_);return(e.shaderSource(r,t),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS))?r:(alert("An error occurred compiling the shaders: "+e.getShaderInfoLog(r)),e.deleteShader(r),null)}function drawScene(e,_,t,r){e.clearColor(1,1,1,1),e.clearDepth(1),e.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);let i=e.canvas.clientWidth/e.canvas.clientHeight,o=mat4.create();mat4.perspective(o,45*Math.PI/180,i,.1,100);let a=mat4.create();mat4.translate(a,a,[-0,0,-6]),mat4.rotate(a,a,r,[0,0,1]),mat4.rotate(a,a,.7*r,[0,1,0]);{let n=e.FLOAT;e.bindBuffer(e.ARRAY_BUFFER,t.position),e.vertexAttribPointer(_.attribLocations.vertexPosition,3,n,!1,0,0),e.enableVertexAttribArray(_.attribLocations.vertexPosition)}e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.indices),e.useProgram(_.program),e.uniformMatrix4fv(_.uniformLocations.projectionMatrix,!1,o),e.uniformMatrix4fv(_.uniformLocations.modelViewMatrix,!1,a);let $=t.vertexCount,l=e.UNSIGNED_SHORT;e.drawElements(e.LINES,$,l,0)}function initBuffers(e,_){return initPositionBuffer(e,_)}document.addEventListener("DOMContentLoaded",()=>{let e=document.querySelector("#glcanvas"),_=e.getContext("webgl");if(!_){alert("Unable to initialize WebGL. Your browser may not support it.");return}let t=initShaderProgram(_,vsSource,fsSource),r={program:t,attribLocations:{vertexPosition:_.getAttribLocation(t,"aVertexPosition")},uniformLocations:{projectionMatrix:_.getUniformLocation(t,"uProjectionMatrix"),modelViewMatrix:_.getUniformLocation(t,"uModelViewMatrix")}};var i=0;let o=Math.floor(5*Math.random());0==o&&(i=4),1==o&&(i=6),2==o&&(i=8),3==o&&(i=12),4==o&&(i=20);let a=initBuffers(_,i),n=0;function $(e){e*=.001;let t=e-n;n=e,drawScene(_,r,a,cubeRotation+=t),requestAnimationFrame($)}requestAnimationFrame($)});